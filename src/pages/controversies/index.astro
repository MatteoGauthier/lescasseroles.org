---
import Layout from "../../layouts/Layout.astro"
import { getCollection } from "astro:content"

const controversies = await getCollection("controversy")

// Sort controversies by date
const sortedControversies = [...controversies].sort(
  (a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
)

// Get unique impacts and statuses for filters
const impacts = ["MAJOR", "MODERATE", "MINOR"]
const statuses = ["ALLEGED", "CONFIRMED", "DISPROVEN"]
---

<Layout title="Controverses | Les Casseroles" description="Explorez toutes les controverses documentées sur Les Casseroles.">
  <main class="container mx-auto py-8 px-4">
    <div class="max-w-7xl mx-auto">
      <div class="flex flex-col md:flex-row justify-between items-start gap-8">
        <!-- Filters Sidebar -->
        <aside class="w-full md:w-64 bg-surface-800 p-6 rounded-lg shadow-sm border border-surface-200/10">
          <h2 class="text-lg font-semibold text-surface-100 mb-4">Filtres</h2>
          
          <!-- Impact Filter -->
          <div class="mb-6">
            <h3 class="text-sm font-medium text-surface-300 mb-2">Impact</h3>
            <div class="space-y-2">
              {impacts.map((impact) => (
                <label class="flex items-center">
                  <input type="checkbox" class="form-checkbox text-primary-600 rounded bg-surface-700 border-surface-600" value={impact} />
                  <span class="ml-2 text-sm text-surface-300">{impact}</span>
                </label>
              ))}
            </div>
          </div>

          <!-- Status Filter -->
          <div class="mb-6">
            <h3 class="text-sm font-medium text-surface-300 mb-2">Statut</h3>
            <div class="space-y-2">
              {statuses.map((status) => (
                <label class="flex items-center">
                  <input type="checkbox" class="form-checkbox text-primary-600 rounded bg-surface-700 border-surface-600" value={status} />
                  <span class="ml-2 text-sm text-surface-300">{status}</span>
                </label>
              ))}
            </div>
          </div>
        </aside>

        <!-- Main Content -->
        <div class="flex-1">
          <div class="flex justify-between items-center mb-6">
            <h1 class="text-3xl font-bold text-surface-100">Controverses</h1>
            <div class="text-sm text-surface-300">
              {controversies.length} résultat{controversies.length > 1 ? "s" : ""}
            </div>
          </div>

          <!-- Controversies Grid -->
          <div class="grid gap-6">
            {sortedControversies.map((controversy) => (
              <a
                href={`/controversies/${controversy.id}`}
                class="block bg-surface-800 rounded-lg border border-surface-200/10 shadow-sm hover:shadow-md transition-shadow"
              >
                <div class="p-6">
                  <div class="flex items-start justify-between mb-4">
                    <div>
                      <h2 class="text-xl font-semibold text-surface-100 mb-2">
                        {controversy.data.title}
                      </h2>
                      <p class="text-surface-300">{controversy.data.description}</p>
                    </div>
                    <div class="flex flex-col items-end gap-2">
                      <span
                        class:list={[
                          "px-3 py-1 text-sm font-medium rounded-full",
                          {
                            "bg-red-900/50 text-red-300": controversy.data.impact === "MAJOR",
                            "bg-yellow-900/50 text-yellow-300": controversy.data.impact === "MODERATE",
                            "bg-green-900/50 text-green-300": controversy.data.impact === "MINOR",
                          },
                        ]}
                      >
                        {controversy.data.impact}
                      </span>
                      <span
                        class:list={[
                          "px-3 py-1 text-sm font-medium rounded-full",
                          {
                            "bg-yellow-900/50 text-yellow-300": controversy.data.status === "ALLEGED",
                            "bg-green-900/50 text-green-300": controversy.data.status === "CONFIRMED",
                            "bg-red-900/50 text-red-300": controversy.data.status === "DISPROVEN",
                          },
                        ]}
                      >
                        {controversy.data.status}
                      </span>
                    </div>
                  </div>
                  <div class="flex items-center justify-between text-sm text-surface-400">
                    <span>{new Date(controversy.data.date).toLocaleDateString()}</span>
                    <span class="text-primary-400 hover:text-primary-300 font-medium">Lire plus →</span>
                  </div>
                </div>
              </a>
            ))}
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Filter functionality can be added here
  const checkboxes = document.querySelectorAll('input[type="checkbox"]')
  checkboxes.forEach((checkbox) => {
    checkbox.addEventListener('change', () => {
      // Add filter logic here
    })
  })
</script> 
